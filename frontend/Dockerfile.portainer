# Dockerfile optimizado para Portainer sin fallos de build
FROM node:18-alpine as build

# Instalar dependencias del sistema
RUN apk add --no-cache python3 make g++

# Establecer directorio de trabajo
WORKDIR /app

# Configurar variables de entorno
ENV NODE_ENV=production
ENV GENERATE_SOURCEMAP=false
ENV REACT_APP_API_URL=http://localhost:9090/api

# Copiar archivos de configuración
COPY package*.json ./
COPY config-overrides.js ./
COPY tailwind.config.js ./

# Instalar dependencias completas (incluyendo devDependencies para build)
RUN npm install

# Copiar código fuente
COPY . .

# Construir la aplicación
RUN npm run build

# Etapa de producción con nginx
FROM nginx:alpine

# Copiar archivos construidos
COPY --from=build /app/build /usr/share/nginx/html

# Configuración nginx
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Exponer puerto
EXPOSE 80

# Comando
CMD ["nginx", "-g", "daemon off;"]