# STACK PARA PORTAINER - SOLUCIÓN PARA ERROR NPM BUILD
# Copia y pega este código en Portainer → Stacks → Web Editor

version: '3.8'

services:
  backend:
    image: python:3.11-slim
    container_name: portal-empleados-backend
    working_dir: /app
    command: >
      bash -c "
      apt-get update && apt-get install -y gcc git &&
      pip install --upgrade pip &&
      pip install Django==5.1.0 djangorestframework==3.15.2 djangorestframework-simplejwt==5.3.0 django-cors-headers==4.3.1 Pillow==10.0.0 PyPDF2==3.0.1 pdfplumber==0.10.3 python-decouple==3.8 &&
      git clone https://github.com/jv-maroto/Portal-Employes.git /tmp/repo &&
      cp -r /tmp/repo/backend/* . &&
      python manage.py migrate --noinput &&
      python manage.py runserver 0.0.0.0:8000
      "
    ports:
      - "9090:8000"
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-66+qjm@3f^=5xav_&v!+_iip$=$=9^z6gorjogr4mw-8a%hfrw
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend,frontend
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8090
      - CORS_ALLOW_ALL_ORIGINS=True
    volumes:
      - backend_media:/app/media
      - backend_static:/app/staticfiles
    restart: unless-stopped

  frontend:
    image: node:18-alpine
    container_name: portal-empleados-frontend
    working_dir: /app
    command: >
      sh -c "
      apk add --no-cache python3 make g++ &&
      git clone https://github.com/jv-maroto/Portal-Employes.git /tmp/repo &&
      cp -r /tmp/repo/frontend/* . &&
      npm install &&
      npm run build &&
      npx serve -s build -l 3000
      "
    ports:
      - "8090:3000"
    environment:
      - NODE_ENV=production
      - GENERATE_SOURCEMAP=false
      - REACT_APP_API_URL=http://localhost:9090/api
    depends_on:
      - backend
    restart: unless-stopped

  # Proxy nginx para servir correctamente
  proxy:
    image: nginx:alpine
    container_name: portal-empleados-proxy
    ports:
      - "8091:80"
    command: >
      sh -c "
      echo 'server {
          listen 80;
          
          # Frontend React
          location / {
              proxy_pass http://frontend:3000;
              proxy_set_header Host \$$host;
              proxy_set_header X-Real-IP \$$remote_addr;
              proxy_set_header X-Forwarded-For \$$proxy_add_x_forwarded_for;
          }
          
          # Backend Django
          location /admin/ {
              proxy_pass http://backend:8000;
              proxy_set_header Host \$$host;
              proxy_set_header X-Real-IP \$$remote_addr;
          }
          
          location /api/ {
              proxy_pass http://backend:8000;
              proxy_set_header Host \$$host;
              proxy_set_header X-Real-IP \$$remote_addr;
          }
          
          location /static/ {
              proxy_pass http://backend:8000;
              proxy_set_header Host \$$host;
          }
          
          location /media/ {
              proxy_pass http://backend:8000;
              proxy_set_header Host \$$host;
          }
      }' > /etc/nginx/conf.d/default.conf &&
      nginx -g 'daemon off;'
      "
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

volumes:
  backend_media:
  backend_static:

networks:
  default:
    driver: bridge